local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Remover UI antiga, se existir
local oldUI = playerGui:FindFirstChild("LoadingScreen")
if oldUI then oldUI:Destroy() end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "LoadingScreen"
screenGui.IgnoreGuiInset = true
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
screenGui.Parent = playerGui

-- Fundo com gradiente animado
local bg = Instance.new("Frame")
bg.Size = UDim2.new(1, 0, 1, 0)
bg.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
bg.Parent = screenGui

local uiGradient = Instance.new("UIGradient", bg)
uiGradient.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
}
uiGradient.Rotation = 0

-- Gradiente se movendo
task.spawn(function()
	while screenGui do
		uiGradient.Rotation += 0.2
		task.wait(0.01)
	end
end)

-- Título
local title = Instance.new("TextLabel")
title.Text = "Mkz Scripts"
title.Font = Enum.Font.GothamBlack
title.TextSize = 60
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.AnchorPoint = Vector2.new(0.5, 0)
title.Position = UDim2.new(0.5, 0, 0.3, 0)
title.Size = UDim2.new(0.8, 0, 0.1, 0)
title.BackgroundTransparency = 1
title.Parent = bg

-- Avisos
local warnings = {
	"Please wait, script is loading...",
	"Leaving now may cause pet loss or ban"
}

local warningLabel = Instance.new("TextLabel")
warningLabel.Text = warnings[1]
warningLabel.Font = Enum.Font.GothamMedium
warningLabel.TextSize = 24
warningLabel.TextColor3 = Color3.fromRGB(230, 230, 230)
warningLabel.AnchorPoint = Vector2.new(0.5, 0)
warningLabel.Position = UDim2.new(0.5, 0, 0.4, 0)
warningLabel.Size = UDim2.new(0.8, 0, 0.05, 0)
warningLabel.BackgroundTransparency = 1
warningLabel.TextWrapped = true
warningLabel.Parent = bg

-- Barra de carregamento
local barBG = Instance.new("Frame")
barBG.Position = UDim2.new(0.5, 0, 0.5, 0)
barBG.AnchorPoint = Vector2.new(0.5, 0)
barBG.Size = UDim2.new(0.6, 0, 0.05, 0)
barBG.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
barBG.BorderSizePixel = 0
barBG.ClipsDescendants = true
barBG.Parent = bg

local barCorner = Instance.new("UICorner")
barCorner.CornerRadius = UDim.new(1, 0)
barCorner.Parent = barBG

local fill = Instance.new("Frame")
fill.Size = UDim2.new(0, 0, 1, 0)
fill.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
fill.BorderSizePixel = 0
fill.Parent = barBG

local fillCorner = Instance.new("UICorner")
fillCorner.CornerRadius = UDim.new(1, 0)
fillCorner.Parent = fill

-- Porcentagem dentro da barra
local percentLabel = Instance.new("TextLabel")
percentLabel.Text = "0%"
percentLabel.Font = Enum.Font.GothamBold
percentLabel.TextSize = 20
percentLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
percentLabel.BackgroundTransparency = 1
percentLabel.AnchorPoint = Vector2.new(0.5, 0.5)
percentLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
percentLabel.Size = UDim2.new(1, 0, 1, 0)
percentLabel.ZIndex = 2
percentLabel.Parent = barBG

-- Carregamento e avisos
local duration = 110 -- segundos
local currentPercent = 0
local lastIndex = 1

for i = 1, 100 do
	currentPercent = i
	local newSize = UDim2.new(i / 100, 0, 1, 0)
	TweenService:Create(fill, TweenInfo.new(1.1, Enum.EasingStyle.Sine), {Size = newSize}):Play()
	percentLabel.Text = i .. "%"

	-- Trocar aviso a cada 10%
	if i % 10 == 0 then
		lastIndex = lastIndex == 1 and 2 or 1
		TweenService:Create(warningLabel, TweenInfo.new(0.5), {Position = UDim2.new(1.5, 0, warningLabel.Position.Y.Scale, 0)}):Play()
		task.wait(0.5)
		warningLabel.Position = UDim2.new(-0.5, 0, warningLabel.Position.Y.Scale, 0)
		warningLabel.Text = warnings[lastIndex]
		TweenService:Create(warningLabel, TweenInfo.new(0.5), {Position = UDim2.new(0.5, 0, warningLabel.Position.Y.Scale, 0)}):Play()
	end

	task.wait(duration / 100)
end

-- Remover tudo após carregar
screenGui:Destroy()
